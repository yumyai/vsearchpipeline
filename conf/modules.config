/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withLabel: vsearch {
        conda = 'bioconda::vsearch=2.27.0'
        container = 'biocontainers/vsearch:2.27.0--h6a68c12_0'
    }

    withLabel: dada2 {
        conda = 'bioconda::bioconductor-dada2=1.30.0 conda-forge::r-digest=0.6.31'
        container = 'biocontainers/bioconductor-dada2:1.30.0--r43hf17093f_0'
    }

    withLabel: picrust2 {
        conda = 'bioconda::picrust2=2.5.2'
        container = 'biocontainers/picrust2:2.5.2--pyhdfd78af_0'
    }

// task looks like  'NFCORE_VSEARCHPIPELINE:VSEARCHPIPELINE:PHYLOSEQ_COMPLETE_METRICS' , so that's why it is sep that way I think
// Use microbiome for alpha and beta analysis
    withLabel: phyloseq {
        conda = 'bioconda::bioconductor-phyloseq=1.44.0 bioconda::bioconductor-microbiome conda-forge::r-phytools bioconda::bioconductor-biostrings conda-forge::r-tidyverse  conda-forge::r-ggthemes'
        // container = 'docker.io/barbarahelena/phylomodule:1.6'
        container = 'docker.io/yumyai/envbiome:0.0.0-dev'
        publishDir = [
            path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}/${task.process.tokenize(':')[-1].tokenize('_')[1].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withLabel: mafft {
        conda = 'bioconda::mafft=7.520'
        container  = 'biocontainers/mafft:7.520--hec16e2b_1'
    }

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }

    withName: SILVADATABASES {
        publishDir = [
            path: { "${params.outdir}" },
            saveAs: { filename -> null }
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = params.multiqc_title ? "--title \"$params.multiqc_title\"" : ''
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
